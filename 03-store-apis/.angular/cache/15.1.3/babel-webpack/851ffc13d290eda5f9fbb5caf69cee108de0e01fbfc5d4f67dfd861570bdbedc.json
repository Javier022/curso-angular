{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nfunction ImgComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 2);\n    i0.ɵɵlistener(\"load\", function ImgComponent_img_0_Template_img_load_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.imgLoaded());\n    })(\"error\", function ImgComponent_img_0_Template_img_error_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.imgError());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.img, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ImgComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imageDefault, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ImgComponent {\n  set changeImage(newImg) {\n    this.img = newImg;\n    console.log('chnage just img => ', this.img);\n  }\n  // number | undefined\n  constructor() {\n    this.img = '';\n    this.alt = '';\n    this.loaded = new EventEmitter();\n    this.imageDefault = './assets/images/default.jpg';\n    this.counter = 0;\n    // before render\n    console.log('constructor ', 'imgValue  =>', this.img);\n  }\n  ngOnChanges(changes) {\n    // before render\n    // listen changes on inputs\n    console.log('ngOnChanges', this.img);\n    console.log(changes, 'changes');\n  }\n  ngOnInit() {\n    // before render\n    // fetch - asunc\n    // once time\n    console.log('ngOnInit', this.img);\n    // this.counterFn = setInterval(() => {\n    //   this.counter += 1;\n    //   console.log('run counter', this.counter);\n    // }, 1000);\n  }\n\n  ngAfterViewInit() {\n    // after render\n    // hanldre children\n    console.log('afterviewinit');\n  }\n  ngOnDestroy() {\n    // delete component\n    console.log('ngOnDestroy');\n    // clearInterval(this.counterFn);\n  }\n\n  imgError() {\n    this.img = this.imageDefault;\n  }\n  imgLoaded() {\n    console.log('child event');\n    this.loaded.emit(this.img);\n  }\n}\nImgComponent.ɵfac = function ImgComponent_Factory(t) {\n  return new (t || ImgComponent)();\n};\nImgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImgComponent,\n  selectors: [[\"app-img\"]],\n  inputs: {\n    changeImage: [\"img\", \"changeImage\"],\n    alt: \"alt\"\n  },\n  outputs: {\n    loaded: \"loaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"src\", \"load\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"elseImg\", \"\"], [3, \"src\", \"load\", \"error\"], [3, \"src\"]],\n  template: function ImgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ImgComponent_img_0_Template, 1, 1, \"img\", 0);\n      i0.ɵɵtemplate(1, ImgComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.img)(\"ngIfElse\", _r1);\n    }\n  },\n  styles: [\"img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZXRzL2ltZy9pbWcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAIEA,YAAY,QAMP,eAAe;;;;;ICVtBC,8BAKE;IAJAA;MAAAA;MAAA;MAAA,OAAQA,iCAAW;IAAA,EAAC;MAAAA;MAAA;MAAA,OACXA,gCAAU;IAAA,EADC;IADtBA,iBAKE;;;;IAFAA,kDAAW;;;;;IAKXA,yBAA4B;;;;IAAvBA,2DAAoB;;;ADS3B,OAAM,MAAOC,YAAY;EAIvB,IACIC,WAAW,CAACC,MAAc;IAC5B,IAAI,CAACC,GAAG,GAAGD,MAAM;IACjBE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACF,GAAG,CAAC;EAC9C;EAOA;EAEAG;IAdA,QAAG,GAAW,EAAE;IAOP,QAAG,GAAW,EAAE;IACf,WAAM,GAAG,IAAIR,YAAY,EAAU;IAC7C,iBAAY,GAAG,6BAA6B;IAC5C,YAAO,GAAW,CAAC;IAKjB;IACAM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,IAAI,CAACF,GAAG,CAAC;EACvD;EAEAI,WAAW,CAACC,OAAsB;IAChC;IACA;IACAJ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACF,GAAG,CAAC;IAEpCC,OAAO,CAACC,GAAG,CAACG,OAAO,EAAE,SAAS,CAAC;EACjC;EAEAC,QAAQ;IACN;IACA;IACA;IAEAL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACF,GAAG,CAAC;IAEjC;IACA;IACA;IACA;EACF;;EAEAO,eAAe;IACb;IACA;IACAN,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B;EAEAM,WAAW;IACT;IACAP,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B;EACF;;EAEAO,QAAQ;IACN,IAAI,CAACT,GAAG,GAAG,IAAI,CAACU,YAAY;EAC9B;EAEAC,SAAS;IACPV,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,GAAG,CAAC;EAC5B;;;mBA9DWH,YAAY;AAAA;;QAAZA,YAAY;EAAAiB;EAAAC;IAAAjB;IAAAkB;EAAA;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBzB1B,6DAKE;MAEFA,8GAEc;;;;MALXA,8BAAW","names":["EventEmitter","i0","ImgComponent","changeImage","newImg","img","console","log","constructor","ngOnChanges","changes","ngOnInit","ngAfterViewInit","ngOnDestroy","imgError","imageDefault","imgLoaded","loaded","emit","selectors","inputs","alt","outputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Javier\\Desktop\\curso-angular\\02-store-componentes\\src\\app\\componets\\img\\img.component.ts","C:\\Users\\Javier\\Desktop\\curso-angular\\02-store-componentes\\src\\app\\componets\\img\\img.component.html"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-img',\n  templateUrl: './img.component.html',\n  styleUrls: ['./img.component.scss'],\n})\nexport class ImgComponent\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy\n{\n  img: string = '';\n  @Input('img')\n  set changeImage(newImg: string) {\n    this.img = newImg;\n    console.log('chnage just img => ', this.img);\n  }\n\n  @Input() alt: string = '';\n  @Output() loaded = new EventEmitter<string>();\n  imageDefault = './assets/images/default.jpg';\n  counter: number = 0;\n  counterFn: any;\n  // number | undefined\n\n  constructor() {\n    // before render\n    console.log('constructor ', 'imgValue  =>', this.img);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // before render\n    // listen changes on inputs\n    console.log('ngOnChanges', this.img);\n\n    console.log(changes, 'changes');\n  }\n\n  ngOnInit(): void {\n    // before render\n    // fetch - asunc\n    // once time\n\n    console.log('ngOnInit', this.img);\n\n    // this.counterFn = setInterval(() => {\n    //   this.counter += 1;\n    //   console.log('run counter', this.counter);\n    // }, 1000);\n  }\n\n  ngAfterViewInit(): void {\n    // after render\n    // hanldre children\n    console.log('afterviewinit');\n  }\n\n  ngOnDestroy(): void {\n    // delete component\n    console.log('ngOnDestroy');\n    // clearInterval(this.counterFn);\n  }\n\n  imgError() {\n    this.img = this.imageDefault;\n  }\n\n  imgLoaded() {\n    console.log('child event');\n    this.loaded.emit(this.img);\n  }\n}\n","<img\n  (load)=\"imgLoaded()\"\n  (error)=\"imgError()\"\n  [src]=\"img\"\n  *ngIf=\"img; else elseImg\"\n/>\n<!-- <h3>{{ counter }}</h3> -->\n<ng-template #elseImg>\n  <img [src]=\"imageDefault\" />\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}